{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u4ecb\u7ecd \u4f5c\u4e3a\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08,\u5728\u5de5\u4f5c\u4e0e\u5b66\u4e60\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u8bb8\u591a\u65b9\u9762\u7684\u6280\u672f\u95ee\u9898,\u66fe\u7ecf\u5c1d\u8bd5\u8fc7\u4f7f\u7528\u4e00\u4e9b\u7f51\u7ad9\u63d0\u4f9b\u7684\u535a\u5ba2 \u6765\u505a\u8bb0\u5f55,\u4f46\u662f\u59cb\u7ec8\u6ca1\u6709\u53d1\u73b0\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u6765\u7ba1\u7406\u53ca\u5907\u4efd\u8fd9\u4e9b\u6587\u6863\u3002\u540e\u6765\u7684\u65e5\u5b50\u91cc\u5f00\u59cb\u4f7f\u7528\u4e00\u4e9b \u601d\u7ef4\u5bfc\u56fe \u6765\u6574\u7406\u601d\u8def,\u4f46\u662f\u4e5f\u59cb\u7ec8\u611f\u89c9\u5185\u5bb9\u4e0d\u591f\u8be6\u7ec6\u3002\u540e\u6765\u5076\u5c14\u7684\u673a\u4f1a\u53d1\u73b0\u4f7f\u7528\u8fd9\u4e9b\u5f00\u6e90\u5de5\u5177\u751f\u6210\u7684\u7f51\u7ad9\u3002\u4e3b\u9898\u5f88\u7b80\u6d01, \u5185\u5bb9\u7684\u5c42\u6b21\u4e5f\u5f88\u6e05\u695a,\u6240\u4ee5\u51c6\u5907\u5f00\u59cb\u5728\u8fd9\u91cc\u6765\u8bb0\u5f55\u6280\u672f\u603b\u7ed3\uff0c\u5f88\u611f\u8c22\u8fd9\u4e9b\u4ee4\u4eba\u5c0a\u656c\u7684\u5f00\u6e90\u8d21\u732e\u8005\u4eec\u3002 Thanks 3000 \u6574\u4e2a\u7f51\u7ad9\u7684\u5efa\u8bbe\u501f\u52a9\u4e86\u5f88\u591a\u5f00\u6e90\u5de5\u5177\u7684\u5e2e\u52a9: MkDocs Material for MkDocs Markdown many incredible contributors \u81f4\u656c\u81ea\u7531\u8f6f\u4ef6\u8005 \u4f5c\u4e3a\u4e00\u4f4d\u81ea\u7531\u8f6f\u4ef6\u7684\u53d7\u76ca\u8005, \u5e0c\u671b\u5411\u8fd9\u4e9b\u65e0\u79c1\u5949\u732e\u7684\u8d21\u732e\u8005\u4eec\u8868\u793a\u6700\u5d07\u9ad8\u7684\u656c\u610f\u3002 \u65e0\u6570\u7684\u8d21\u732e\u8005\u4eec\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u53d8\u5f97\u4e30\u5bcc\u591a\u5f69, \u8fd9\u91cc\u4e5f\u662f\u4e3a\u6570\u4e0d\u591a\u4e0d\u5206\u56fd\u754c,\u79cd\u65cf,\u8d2b\u5bcc,\u80a4\u8272\u53ef\u4ee5\u7545\u6240\u6b32\u8a00(\u6cd5\u5f8b\u5141\u8bb8\u8303\u56f4)\u7684\u5730\u65b9\u3002 Thank you 3000 . \u7f51\u7ad9\u90e8\u7f72 \u8bf7\u53c2\u8003 \u5982\u4f55\u81ea\u52a8\u90e8\u7f72github.io \u3002","title":"Home"},{"location":"#_1","text":"\u4f5c\u4e3a\u4e00\u540d\u8f6f\u4ef6\u5de5\u7a0b\u5e08,\u5728\u5de5\u4f5c\u4e0e\u5b66\u4e60\u4e2d\u4f1a\u9047\u5230\u5f88\u591a\u8bb8\u591a\u65b9\u9762\u7684\u6280\u672f\u95ee\u9898,\u66fe\u7ecf\u5c1d\u8bd5\u8fc7\u4f7f\u7528\u4e00\u4e9b\u7f51\u7ad9\u63d0\u4f9b\u7684\u535a\u5ba2 \u6765\u505a\u8bb0\u5f55,\u4f46\u662f\u59cb\u7ec8\u6ca1\u6709\u53d1\u73b0\u6bd4\u8f83\u597d\u7684\u65b9\u6cd5\u6765\u7ba1\u7406\u53ca\u5907\u4efd\u8fd9\u4e9b\u6587\u6863\u3002\u540e\u6765\u7684\u65e5\u5b50\u91cc\u5f00\u59cb\u4f7f\u7528\u4e00\u4e9b \u601d\u7ef4\u5bfc\u56fe \u6765\u6574\u7406\u601d\u8def,\u4f46\u662f\u4e5f\u59cb\u7ec8\u611f\u89c9\u5185\u5bb9\u4e0d\u591f\u8be6\u7ec6\u3002\u540e\u6765\u5076\u5c14\u7684\u673a\u4f1a\u53d1\u73b0\u4f7f\u7528\u8fd9\u4e9b\u5f00\u6e90\u5de5\u5177\u751f\u6210\u7684\u7f51\u7ad9\u3002\u4e3b\u9898\u5f88\u7b80\u6d01, \u5185\u5bb9\u7684\u5c42\u6b21\u4e5f\u5f88\u6e05\u695a,\u6240\u4ee5\u51c6\u5907\u5f00\u59cb\u5728\u8fd9\u91cc\u6765\u8bb0\u5f55\u6280\u672f\u603b\u7ed3\uff0c\u5f88\u611f\u8c22\u8fd9\u4e9b\u4ee4\u4eba\u5c0a\u656c\u7684\u5f00\u6e90\u8d21\u732e\u8005\u4eec\u3002","title":"\u4ecb\u7ecd"},{"location":"#thanks-3000","text":"\u6574\u4e2a\u7f51\u7ad9\u7684\u5efa\u8bbe\u501f\u52a9\u4e86\u5f88\u591a\u5f00\u6e90\u5de5\u5177\u7684\u5e2e\u52a9: MkDocs Material for MkDocs Markdown many incredible contributors \u81f4\u656c\u81ea\u7531\u8f6f\u4ef6\u8005 \u4f5c\u4e3a\u4e00\u4f4d\u81ea\u7531\u8f6f\u4ef6\u7684\u53d7\u76ca\u8005, \u5e0c\u671b\u5411\u8fd9\u4e9b\u65e0\u79c1\u5949\u732e\u7684\u8d21\u732e\u8005\u4eec\u8868\u793a\u6700\u5d07\u9ad8\u7684\u656c\u610f\u3002 \u65e0\u6570\u7684\u8d21\u732e\u8005\u4eec\u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u53d8\u5f97\u4e30\u5bcc\u591a\u5f69, \u8fd9\u91cc\u4e5f\u662f\u4e3a\u6570\u4e0d\u591a\u4e0d\u5206\u56fd\u754c,\u79cd\u65cf,\u8d2b\u5bcc,\u80a4\u8272\u53ef\u4ee5\u7545\u6240\u6b32\u8a00(\u6cd5\u5f8b\u5141\u8bb8\u8303\u56f4)\u7684\u5730\u65b9\u3002 Thank you 3000 .","title":"Thanks 3000"},{"location":"#_2","text":"\u8bf7\u53c2\u8003 \u5982\u4f55\u81ea\u52a8\u90e8\u7f72github.io \u3002","title":"\u7f51\u7ad9\u90e8\u7f72"},{"location":"C++/","text":"c++\u535a\u5ba2\u7684\u5199\u4f5c\u8981\u6c42 c++\u6838\u5fc3\u8bed\u8a00\u7279\u6027(core feature) c++\u6784\u9020\u51fd\u6570 c++\u6790\u6784\u51fd\u6570 \"default\" and \"delete\" \"virtual\" and \"override\" c++\u6807\u51c6\u5e93 c++\u591a\u7ebf\u7a0b std::thread std::thread::native_handle \u4e92\u65a5\u91cf mutex & shared_mutex timed_mutex & recursive_mutex c++\u5bf9\u8c61\u6a21\u578b static\u5bf9\u8c61\u7684\u6784\u9020\u4e0e\u6790\u6784 \u51fd\u6570\u5185\u90e8static\u5bf9\u8c61\u6784\u9020\u4e0e\u6790\u6784 \u5168\u5c40static\u5bf9\u8c61\u6784\u9020\u4e0e\u6790\u6784 c++\u5185\u5bb9\u6742\u8c08 c++\u59d4\u6258\u6784\u9020\u51fd\u6570(Delegating constructor) \u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f(signton pattern) \u501f\u52a9std::mutex\u6216std::call_once\u5b9e\u73b0 \u501f\u52a9double check\u6216static member\u5b9e\u73b0","title":"Home"},{"location":"C++/coreFeature/specialMemberFunction/constructor/","text":"\u7b80\u4ecb \u53c2\u8003\u6587\u6863: cpp_class c++\u4e2d\u5305\u542b\u4e09\u79cd\u6784\u9020\u51fd\u6570\uff1a * \u9ed8\u8ba4\u6784\u9020\u51fd\u6570(Default constructor) * \u62f7\u8d1d\u6784\u9020\u51fd\u6570(Copy constructor) * \u79fb\u52a8\u6784\u9020\u51fd\u6570(Move constructor) \u4e24\u79cd\u8d4b\u503c\u8fd0\u7b97\u7b26: * \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26(Copy assignment operator) * \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26(Move assignment operator) \u6784\u9020\u51fd\u6570\u4ecb\u7ecd \u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26","title":"\u6784\u9020\u51fd\u6570\u7b80\u4ecb"},{"location":"C++/coreFeature/specialMemberFunction/constructor/#_1","text":"\u53c2\u8003\u6587\u6863: cpp_class c++\u4e2d\u5305\u542b\u4e09\u79cd\u6784\u9020\u51fd\u6570\uff1a * \u9ed8\u8ba4\u6784\u9020\u51fd\u6570(Default constructor) * \u62f7\u8d1d\u6784\u9020\u51fd\u6570(Copy constructor) * \u79fb\u52a8\u6784\u9020\u51fd\u6570(Move constructor) \u4e24\u79cd\u8d4b\u503c\u8fd0\u7b97\u7b26: * \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26(Copy assignment operator) * \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26(Move assignment operator)","title":"\u7b80\u4ecb"},{"location":"C++/coreFeature/specialMemberFunction/constructor/#_2","text":"\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u62f7\u8d1d\u8d4b\u503c\u8fd0\u7b97\u7b26 \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26","title":"\u6784\u9020\u51fd\u6570\u4ecb\u7ecd"},{"location":"C++/coreFeature/specialMemberFunction/copy_constructor/","text":"\u7b80\u4ecb \u53c2\u8003\u624b\u518c: copy constructor \u7c7b T \u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u6307\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a T& , const T& , volatile T& \u6216 const volatile T& ,\u4e0e\u6b64\u540c\u65f6\u4e0d\u5b58\u5728\u5176\u4ed6\u53c2\u6570\uff0c\u6216\u8005\u5176\u4ed6\u53c2\u6570\u5747\u6709\u9ed8\u8ba4\u503c\u3002 \u58f0\u660e\u8bed\u6cd5 class_name ( const & class_name ); \u5b9a\u4e49\u8bed\u6cd5 class_name : class_name ( const & class_name ) { ... } \u4f7f\u7528\u65b9\u5f0f \u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u90fd\u4f1a\u8c03\u7528 T \u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570: \u76f4\u63a5\u521d\u59cb\u5316: T a = b; T a2(b); \u51fd\u6570\u53c2\u6570\u4f20\u9012: void f(T a); \u51fd\u6570\u8fd4\u56de\u503c: \u5728T\u4e0d\u652f\u6301\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019,\u5728\u51fd\u6570f\u4e2d\u8fd4\u56deT\u7684\u5bf9\u8c61 class_name b ; // use default constructor class_name a ( b ); // use copy constructor class_name a = b ; // use copy constructor","title":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570"},{"location":"C++/coreFeature/specialMemberFunction/copy_constructor/#_1","text":"\u53c2\u8003\u624b\u518c: copy constructor \u7c7b T \u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u6307\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a T& , const T& , volatile T& \u6216 const volatile T& ,\u4e0e\u6b64\u540c\u65f6\u4e0d\u5b58\u5728\u5176\u4ed6\u53c2\u6570\uff0c\u6216\u8005\u5176\u4ed6\u53c2\u6570\u5747\u6709\u9ed8\u8ba4\u503c\u3002","title":"\u7b80\u4ecb"},{"location":"C++/coreFeature/specialMemberFunction/copy_constructor/#_2","text":"class_name ( const & class_name );","title":"\u58f0\u660e\u8bed\u6cd5"},{"location":"C++/coreFeature/specialMemberFunction/copy_constructor/#_3","text":"class_name : class_name ( const & class_name ) { ... }","title":"\u5b9a\u4e49\u8bed\u6cd5"},{"location":"C++/coreFeature/specialMemberFunction/copy_constructor/#_4","text":"\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u90fd\u4f1a\u8c03\u7528 T \u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570: \u76f4\u63a5\u521d\u59cb\u5316: T a = b; T a2(b); \u51fd\u6570\u53c2\u6570\u4f20\u9012: void f(T a); \u51fd\u6570\u8fd4\u56de\u503c: \u5728T\u4e0d\u652f\u6301\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019,\u5728\u51fd\u6570f\u4e2d\u8fd4\u56deT\u7684\u5bf9\u8c61 class_name b ; // use default constructor class_name a ( b ); // use copy constructor class_name a = b ; // use copy constructor","title":"\u4f7f\u7528\u65b9\u5f0f"},{"location":"C++/coreFeature/specialMemberFunction/default_constructor/","text":"\u7b80\u4ecb c++\u9ed8\u8ba4\u6784\u9020\u51fd\u6570(Default constructor)\u662f\u6307 \u4e0d\u4f20\u5165\u4efb\u4f55\u53c2\u6570\u4fbf\u53ef \u4ee5\u8c03\u7528 \u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u610f\u5473\u7740\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u662f \u6ca1\u6709\u4efb\u4f55\u53c2\u6570 \u7684\u6784 \u9020\u51fd\u6570\u6216\u8005\u662f \u6bcf\u4e2a\u53c2\u6570\u90fd\u6709\u9ed8\u8ba4\u503c \u7684\u6784\u9020\u51fd\u6570\u3002 \u8bed\u6cd5 \u58f0\u660e\u8bed\u6cd5 Classname (); // \u8fd9\u91cc\u7684 \"int a = 0\" \u53ef\u4ee5\u66ff\u6362\u6210\u5176\u4ed6\u4efb\u4f55\u7c7b\u578b\u7684\u9ed8\u8ba4\u53c2\u6570 Classname ( int a = 0 ); \u5b9a\u4e49\u8bed\u6cd5 Classname :: Classname () { ... } Classname :: Classname ( int a = 0 ) { ... } \u603b\u7ed3 \u5f53\u5728\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u591a\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u5982\u4f55\u5904\u7406? class Foo { public : Foo () // default constructor { std :: cout << \"defautl constructor\" << std :: endl ; } // has default parameter Foo ( int i = 0 ) // default constructor { std :: cout << \"Foo second constructor: \" << i << std :: endl ; } }; \u9488\u5bf9 Foo \u7c7b\u7684\u60c5\u51b5\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u9700\u8981\u663e\u5f0f\u7684\u8bf4\u660e\u4f7f\u7528\u54ea\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u3002 \u4f8b\u5982\uff1a Foo f1 (); Foo f2 ( 3 ); //Foo f3; //'Foo::Foo' ambigious to overload function","title":"\u9ed8\u8ba4\u6784\u9020\u51fd\u6570"},{"location":"C++/coreFeature/specialMemberFunction/default_constructor/#_1","text":"c++\u9ed8\u8ba4\u6784\u9020\u51fd\u6570(Default constructor)\u662f\u6307 \u4e0d\u4f20\u5165\u4efb\u4f55\u53c2\u6570\u4fbf\u53ef \u4ee5\u8c03\u7528 \u7684\u6784\u9020\u51fd\u6570\uff0c\u8fd9\u610f\u5473\u7740\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u662f \u6ca1\u6709\u4efb\u4f55\u53c2\u6570 \u7684\u6784 \u9020\u51fd\u6570\u6216\u8005\u662f \u6bcf\u4e2a\u53c2\u6570\u90fd\u6709\u9ed8\u8ba4\u503c \u7684\u6784\u9020\u51fd\u6570\u3002","title":"\u7b80\u4ecb"},{"location":"C++/coreFeature/specialMemberFunction/default_constructor/#_2","text":"\u58f0\u660e\u8bed\u6cd5 Classname (); // \u8fd9\u91cc\u7684 \"int a = 0\" \u53ef\u4ee5\u66ff\u6362\u6210\u5176\u4ed6\u4efb\u4f55\u7c7b\u578b\u7684\u9ed8\u8ba4\u53c2\u6570 Classname ( int a = 0 ); \u5b9a\u4e49\u8bed\u6cd5 Classname :: Classname () { ... } Classname :: Classname ( int a = 0 ) { ... }","title":"\u8bed\u6cd5"},{"location":"C++/coreFeature/specialMemberFunction/default_constructor/#_3","text":"\u5f53\u5728\u4e00\u4e2a\u7c7b\u4e2d\u5b58\u5728\u591a\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u65f6\u5019\uff0c\u9700\u8981\u5982\u4f55\u5904\u7406? class Foo { public : Foo () // default constructor { std :: cout << \"defautl constructor\" << std :: endl ; } // has default parameter Foo ( int i = 0 ) // default constructor { std :: cout << \"Foo second constructor: \" << i << std :: endl ; } }; \u9488\u5bf9 Foo \u7c7b\u7684\u60c5\u51b5\uff0c\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u9700\u8981\u663e\u5f0f\u7684\u8bf4\u660e\u4f7f\u7528\u54ea\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u3002 \u4f8b\u5982\uff1a Foo f1 (); Foo f2 ( 3 ); //Foo f3; //'Foo::Foo' ambigious to overload function","title":"\u603b\u7ed3"},{"location":"C++/coreFeature/specialMemberFunction/move_constructor/","text":"\u7b80\u4ecb \u53c2\u8003\u624b\u518c: \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u7c7b T \u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u662f\u6307\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a T&& , const T&& , volatile T&& \u6216\u8005 const volatile T&& \u7684\u6784\u9020\u51fd\u6570\uff0c \u4e8e\u6b64\u540c\u65f6\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u6216\u8005\u5176\u4ed6\u53c2\u6570\u5168\u90fd\u6709\u9ed8\u8ba4\u503c\u3002 \u58f0\u660e\u8bed\u6cd5 class_name ( class_name && ); \u5b9a\u4e49\u8bed\u6cd5 class_name : calss_name ( class_name && rvale ) { ... } \u4f7f\u7528\u6761\u4ef6 \u4ee5 T \u7684\u53f3\u503c\u521d\u59cb\u5316\u5bf9\u8c61: T a = std::move(b); \u5411\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u4e00\u4e2a\u53f3\u503c: f(std::move(b)); \u8fd4\u56de\u503c\u4e3a\u5b58\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684 T ,\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 RVO\u4f18\u5316 \u603b\u7ed3 \u4ece\u53c2\u8003\u624b\u518c\u4e0a\u770b\u5230,\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5141\u8bb8\u5f62\u53c2\u4e3a const T&& ,\u4f46\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5b58\u5728\u7684\u610f\u4e49\u4e3a\u5bf9\u8c61\u5185\u90e8\u7684\u5185\u5b58\u642c\u79fb\uff0c\u6240\u4ee5\u5b9e\u5728\u60f3\u4e0d\u5230\u5f62\u53c2\u4e3a\u5e38\u91cf\u7684\u610f\u4e49\u3002","title":"\u79fb\u52a8\u6784\u9020\u51fd\u6570"},{"location":"C++/coreFeature/specialMemberFunction/move_constructor/#_1","text":"\u53c2\u8003\u624b\u518c: \u79fb\u52a8\u6784\u9020\u51fd\u6570 \u7c7b T \u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u662f\u6307\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a T&& , const T&& , volatile T&& \u6216\u8005 const volatile T&& \u7684\u6784\u9020\u51fd\u6570\uff0c \u4e8e\u6b64\u540c\u65f6\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u6216\u8005\u5176\u4ed6\u53c2\u6570\u5168\u90fd\u6709\u9ed8\u8ba4\u503c\u3002","title":"\u7b80\u4ecb"},{"location":"C++/coreFeature/specialMemberFunction/move_constructor/#_2","text":"class_name ( class_name && );","title":"\u58f0\u660e\u8bed\u6cd5"},{"location":"C++/coreFeature/specialMemberFunction/move_constructor/#_3","text":"class_name : calss_name ( class_name && rvale ) { ... }","title":"\u5b9a\u4e49\u8bed\u6cd5"},{"location":"C++/coreFeature/specialMemberFunction/move_constructor/#_4","text":"\u4ee5 T \u7684\u53f3\u503c\u521d\u59cb\u5316\u5bf9\u8c61: T a = std::move(b); \u5411\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u4e00\u4e2a\u53f3\u503c: f(std::move(b)); \u8fd4\u56de\u503c\u4e3a\u5b58\u5728\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684 T ,\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 RVO\u4f18\u5316","title":"\u4f7f\u7528\u6761\u4ef6"},{"location":"C++/coreFeature/specialMemberFunction/move_constructor/#_5","text":"\u4ece\u53c2\u8003\u624b\u518c\u4e0a\u770b\u5230,\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5141\u8bb8\u5f62\u53c2\u4e3a const T&& ,\u4f46\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5b58\u5728\u7684\u610f\u4e49\u4e3a\u5bf9\u8c61\u5185\u90e8\u7684\u5185\u5b58\u642c\u79fb\uff0c\u6240\u4ee5\u5b9e\u5728\u60f3\u4e0d\u5230\u5f62\u53c2\u4e3a\u5e38\u91cf\u7684\u610f\u4e49\u3002","title":"\u603b\u7ed3"},{"location":"C++/objectModel/scoped_static/","text":"\u7b80\u4ecb \u672c\u6587\u4e3b\u8981\u4ecb\u7ecdC++11\u4e4b\u540e\u5173\u4e8e\u51fd\u6570\u5185\u90e8static\u5bf9\u8c61(scoped static)\u7684 \u76f8\u5173\u6784\u9020\u4e0e\u6790\u6784\u6a21\u578b\u3002 Note: \u672c\u6587\u7ae0\u5927\u90e8\u5206\u5185\u5bb9\u4e3a\u9605\u8bfb\u300ac++\u5bf9\u8c61\u6a21\u578b\u300b\u7684\u603b\u7ed3\u3002 \u672c\u6587\u5c1d\u8bd5\u89e3\u91ca\u4e24\u4e2a\u95ee\u9898: c++\u5982\u4f55\u6784\u9020scoped static\u5bf9\u8c61 c++\u91c7\u7528\u4f55\u79cd\u89c4\u5219\u6790\u6784scoped static\u5bf9\u8c61 ### \u524d\u8a00 \u5728\u5b66\u4e60scoped static\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ecf\u5e38\u542c\u5230\u8fd9\u4e9b\u7ed3\u8bba: \u8be5\u5bf9\u8c61\u653e\u7f6e\u5728\u5168\u5c40\u6570\u636e\u6bb5\u4e2d \u8be5\u5bf9\u8c61\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u8be5\u51fd\u6570\u7684\u65f6\u5019\u88ab\u521d\u59cb\u5316 \u8be5\u5bf9\u8c61\u7684\u4f5c\u7528\u57df\u4e3a\u51fd\u6570\u5185\u90e8 \u8be5\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u548c\u5e94\u7528\u751f\u547d\u5468\u671f\u76f8\u540c \u8be5\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u4e3a\u7ebf\u7a0b\u5b89\u5168\u7684 \u7f16\u8bd1\u5668\u5982\u4f55\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd \u793a\u4f8b\u4ee3\u7801: #include <iostream> struct Foo { Foo () { i = 0 ; std :: cout << \"Foo constructor\" << std :: endl ; } ~ Foo () { std :: cout << \"Foo destructor\" << std :: endl ; } int i ; }; struct Foo_2 { Foo_2 () { i = 0 ; std :: cout << \"Foo_2 constructor\" << std :: endl ; } ~ Foo_2 () { std :: cout << \"Foo_2 destructor\" << std :: endl ; } int i ; }; int fun_foo () { static Foo s_foo ; s_foo . i ++ ; return s_foo . i ; } int fun_foo_2 () { static Foo_2 s_foo_2 ; s_foo_2 . i ++ ; return s_foo_2 . i ; } int main () { //fun_foo_2(); //fun_foo(); fun_foo (); fun_foo_2 (); return 0 ; } static\u5bf9\u8c61\u7684\u6790\u6784\u987a\u5e8f \u89c2\u5bdf\u4ee5\u4e0a\u4ee3\u7801\u7684\u8f93\u51fa\uff0c\u4f1a\u53d1\u73b0\u5f53\u51fd\u6570\u8c03\u7528\u76f8\u53cd\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u7684log\u4e5f\u662f \u76f8\u53cd\u7684\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u662f\u4f1a\u521b\u5efa\u76f8\u5e94\u7684static\u5bf9\u8c61\u521d\u59cb\u94fe\uff0c\u5728\u6790\u6784\u7684\u65f6\u5019\uff0c \u4f1a\u6839\u636e\u8be5\u521d\u59cb\u5316\u8fdb\u884c\u6790\u6784\uff0c\u6700\u540e\u521d\u59cb\u5316\u7684static\u5bf9\u8c61\u4f1a\u6700\u5f00\u59cb\u6790\u6784\u3002 \u53ef\u4ee5\u60f3\u8c61\uff0c\u5728\u521d\u59cb\u5316\u65f6\u5019\uff0c\u9664\u4e86\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\uff0c\u8fd8\u8981\u628a\u8be5\u5bf9\u8c61\u6307\u9488\u653e\u5165 \u521d\u59cb\u5316\u94fe\u8868\u4e2d\u3002\u4ee5\u6b64\u6765\u51b3\u5b9a\u76f8\u5e94\u5bf9\u8c61\u7684\u6790\u6784\u987a\u5e8f\u3002 \u5b9e\u73b0\u8be5\u51fd\u6570\u7684\u4f2a\u4ee3\u7801 \u9996\u5148\uff0cstatic\u5bf9\u8c61\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\uff0c\u6240\u4ee5 \u9996\u5148\u9700\u8981\u76f8\u5e94\u7684\u6807\u8bc6\u7b26\u6765\u6807\u8bc6\u8be5\u5bf9\u8c61\u662f\u5426\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\uff0c\u5176\u6b21\u5c06\u5df2\u7ecf \u521d\u59cb\u5316\u7684\u5bf9\u8c61\u7684\u5730\u5740\u653e\u5165\u76f8\u5e94\u7684\u94fe\u8868\u4e2d\u6765\u8bb0\u5f55\u521d\u59cb\u5316\u987a\u5e8f\u3002 int fun_foo () { static Foo s_foo ; s_foo . i ++ ; return s_foo . i ; } //\u4f2a\u7801 bool s_foo_init = false ; int fun_foo () { static Foo s_foo ; if ( ! s_foo_init ){ // \u7b2c\u4e00\u6b21\u8c03\u7528\u8be5\u51fd\u6570 enter_thread_guard ; // \u8fdb\u5165\u7ebf\u7a0b\u5b89\u5168 Foo :: Foo ( & s_foo ); // \u521d\u59cb\u5316s_foo; s_foo_init = true ; // \u6807\u8bb0\u5df2\u7ecf\u521d\u59cb\u5316 link_list . push ( & s_foo ); // \u8be5\u5bf9\u8c61\u5730\u5740\u653e\u5165\u94fe\u8868\u4e2d exit_thread_guard ; // \u9000\u51fa\u7ebf\u7a0b\u5b89\u5168 } s_foo . i ++ ; return s_foo . i ; } \u4ece\u4e0a\u9762\u7684\u4f2a\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u5b9e\u73b0\u76f8\u5e94\u7684static\u5bf9\u8c61\u53ef\u4ee5\u91c7\u7528 \u7684\u6a21\u578b\uff0c\u4ee5\u6b64\u6765\u6ee1\u8db3static\u5bf9\u8c61\u7684\u5404\u79cd\u8981\u6c42\u3002","title":"Scoped static"},{"location":"C++/objectModel/scoped_static/#_1","text":"\u672c\u6587\u4e3b\u8981\u4ecb\u7ecdC++11\u4e4b\u540e\u5173\u4e8e\u51fd\u6570\u5185\u90e8static\u5bf9\u8c61(scoped static)\u7684 \u76f8\u5173\u6784\u9020\u4e0e\u6790\u6784\u6a21\u578b\u3002 Note: \u672c\u6587\u7ae0\u5927\u90e8\u5206\u5185\u5bb9\u4e3a\u9605\u8bfb\u300ac++\u5bf9\u8c61\u6a21\u578b\u300b\u7684\u603b\u7ed3\u3002 \u672c\u6587\u5c1d\u8bd5\u89e3\u91ca\u4e24\u4e2a\u95ee\u9898: c++\u5982\u4f55\u6784\u9020scoped static\u5bf9\u8c61 c++\u91c7\u7528\u4f55\u79cd\u89c4\u5219\u6790\u6784scoped static\u5bf9\u8c61 ### \u524d\u8a00 \u5728\u5b66\u4e60scoped static\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f1a\u7ecf\u5e38\u542c\u5230\u8fd9\u4e9b\u7ed3\u8bba: \u8be5\u5bf9\u8c61\u653e\u7f6e\u5728\u5168\u5c40\u6570\u636e\u6bb5\u4e2d \u8be5\u5bf9\u8c61\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u8c03\u7528\u8be5\u51fd\u6570\u7684\u65f6\u5019\u88ab\u521d\u59cb\u5316 \u8be5\u5bf9\u8c61\u7684\u4f5c\u7528\u57df\u4e3a\u51fd\u6570\u5185\u90e8 \u8be5\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u548c\u5e94\u7528\u751f\u547d\u5468\u671f\u76f8\u540c \u8be5\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u4e3a\u7ebf\u7a0b\u5b89\u5168\u7684","title":"\u7b80\u4ecb"},{"location":"C++/objectModel/scoped_static/#_2","text":"\u793a\u4f8b\u4ee3\u7801: #include <iostream> struct Foo { Foo () { i = 0 ; std :: cout << \"Foo constructor\" << std :: endl ; } ~ Foo () { std :: cout << \"Foo destructor\" << std :: endl ; } int i ; }; struct Foo_2 { Foo_2 () { i = 0 ; std :: cout << \"Foo_2 constructor\" << std :: endl ; } ~ Foo_2 () { std :: cout << \"Foo_2 destructor\" << std :: endl ; } int i ; }; int fun_foo () { static Foo s_foo ; s_foo . i ++ ; return s_foo . i ; } int fun_foo_2 () { static Foo_2 s_foo_2 ; s_foo_2 . i ++ ; return s_foo_2 . i ; } int main () { //fun_foo_2(); //fun_foo(); fun_foo (); fun_foo_2 (); return 0 ; }","title":"\u7f16\u8bd1\u5668\u5982\u4f55\u5b9e\u73b0\u4e0a\u8ff0\u529f\u80fd"},{"location":"C++/objectModel/scoped_static/#static","text":"\u89c2\u5bdf\u4ee5\u4e0a\u4ee3\u7801\u7684\u8f93\u51fa\uff0c\u4f1a\u53d1\u73b0\u5f53\u51fd\u6570\u8c03\u7528\u76f8\u53cd\u7684\u65f6\u5019\uff0c\u8f93\u51fa\u7684log\u4e5f\u662f \u76f8\u53cd\u7684\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u662f\u4f1a\u521b\u5efa\u76f8\u5e94\u7684static\u5bf9\u8c61\u521d\u59cb\u94fe\uff0c\u5728\u6790\u6784\u7684\u65f6\u5019\uff0c \u4f1a\u6839\u636e\u8be5\u521d\u59cb\u5316\u8fdb\u884c\u6790\u6784\uff0c\u6700\u540e\u521d\u59cb\u5316\u7684static\u5bf9\u8c61\u4f1a\u6700\u5f00\u59cb\u6790\u6784\u3002 \u53ef\u4ee5\u60f3\u8c61\uff0c\u5728\u521d\u59cb\u5316\u65f6\u5019\uff0c\u9664\u4e86\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\uff0c\u8fd8\u8981\u628a\u8be5\u5bf9\u8c61\u6307\u9488\u653e\u5165 \u521d\u59cb\u5316\u94fe\u8868\u4e2d\u3002\u4ee5\u6b64\u6765\u51b3\u5b9a\u76f8\u5e94\u5bf9\u8c61\u7684\u6790\u6784\u987a\u5e8f\u3002","title":"static\u5bf9\u8c61\u7684\u6790\u6784\u987a\u5e8f"},{"location":"C++/objectModel/scoped_static/#_3","text":"\u9996\u5148\uff0cstatic\u5bf9\u8c61\u53ea\u4f1a\u5728\u7b2c\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\uff0c\u6240\u4ee5 \u9996\u5148\u9700\u8981\u76f8\u5e94\u7684\u6807\u8bc6\u7b26\u6765\u6807\u8bc6\u8be5\u5bf9\u8c61\u662f\u5426\u5df2\u7ecf\u88ab\u521d\u59cb\u5316\uff0c\u5176\u6b21\u5c06\u5df2\u7ecf \u521d\u59cb\u5316\u7684\u5bf9\u8c61\u7684\u5730\u5740\u653e\u5165\u76f8\u5e94\u7684\u94fe\u8868\u4e2d\u6765\u8bb0\u5f55\u521d\u59cb\u5316\u987a\u5e8f\u3002 int fun_foo () { static Foo s_foo ; s_foo . i ++ ; return s_foo . i ; } //\u4f2a\u7801 bool s_foo_init = false ; int fun_foo () { static Foo s_foo ; if ( ! s_foo_init ){ // \u7b2c\u4e00\u6b21\u8c03\u7528\u8be5\u51fd\u6570 enter_thread_guard ; // \u8fdb\u5165\u7ebf\u7a0b\u5b89\u5168 Foo :: Foo ( & s_foo ); // \u521d\u59cb\u5316s_foo; s_foo_init = true ; // \u6807\u8bb0\u5df2\u7ecf\u521d\u59cb\u5316 link_list . push ( & s_foo ); // \u8be5\u5bf9\u8c61\u5730\u5740\u653e\u5165\u94fe\u8868\u4e2d exit_thread_guard ; // \u9000\u51fa\u7ebf\u7a0b\u5b89\u5168 } s_foo . i ++ ; return s_foo . i ; } \u4ece\u4e0a\u9762\u7684\u4f2a\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5728\u5b9e\u73b0\u76f8\u5e94\u7684static\u5bf9\u8c61\u53ef\u4ee5\u91c7\u7528 \u7684\u6a21\u578b\uff0c\u4ee5\u6b64\u6765\u6ee1\u8db3static\u5bf9\u8c61\u7684\u5404\u79cd\u8981\u6c42\u3002","title":"\u5b9e\u73b0\u8be5\u51fd\u6570\u7684\u4f2a\u4ee3\u7801"},{"location":"C++/others/delegating_constructor/","text":"\u7b80\u4ecb \u53c2\u8003\u624b\u518c: delegating constructor \u59d4\u6258\u6784\u9020\u51fd\u6570\u5c31\u662f\u5728\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528\u8be5\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570\u3002 \u9488\u5bf9\u59d4\u6258\u6784\u9020\u51fd\u6570\uff0c\u76f4\u63a5\u540c\u65f6\u793a\u4f8b\u6765\u5c55\u793a\u65f6\u6bd4\u8f83\u901a\u4fd7\u6613\u61c2\u7684\u3002 \u793a\u4f8b class Foo { public : Foo ( int v1 , int v2 ){ m1 = v1 ; m2 = v2 ; } //\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528Foo(int v1, int v2)\u6784\u9020\u51fd\u6570 //\u6b64\u65f6m1 = a1; m2 = 0; Foo ( int a1 ) : Foo ( a1 , 0 ){ } private : int m1 ; int m2 ; } \u72af\u8fc7\u7684\u9519\u8bef class ErrorFoo { public : ErrorFoo ( int v1 , int v2 ){ m1 = v1 ; m2 = v2 ; } /*\u6b64\u5904\u5e76\u6ca1\u6709\u5c06ErrorFoo\u7684\u6784\u9020\u59d4\u6258\u7ed9ErrorFoo(int v1,int v2), \u53ea\u662f\u5728\u6784\u9020\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e86\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u6240\u4ee5\u8c03\u7528\u8be5\u6784\u9020\u51fd\u6570\uff0c \u4f1a\u5bfc\u81f4m1,m2\u5e76\u6ca1\u6709\u88ab\u6b63\u786e\u7684\u521d\u59cb\u5316*/ ErrorFoo ( int a1 ){ Foo ( a1 , 0 ); } private : int m1 ; int m2 ; }","title":"Delegating constructor"},{"location":"C++/others/delegating_constructor/#_1","text":"\u53c2\u8003\u624b\u518c: delegating constructor \u59d4\u6258\u6784\u9020\u51fd\u6570\u5c31\u662f\u5728\u4e00\u4e2a\u7c7b\u7684\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528\u8be5\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u51fd\u6570\u3002 \u9488\u5bf9\u59d4\u6258\u6784\u9020\u51fd\u6570\uff0c\u76f4\u63a5\u540c\u65f6\u793a\u4f8b\u6765\u5c55\u793a\u65f6\u6bd4\u8f83\u901a\u4fd7\u6613\u61c2\u7684\u3002","title":"\u7b80\u4ecb"},{"location":"C++/others/delegating_constructor/#_2","text":"class Foo { public : Foo ( int v1 , int v2 ){ m1 = v1 ; m2 = v2 ; } //\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528Foo(int v1, int v2)\u6784\u9020\u51fd\u6570 //\u6b64\u65f6m1 = a1; m2 = 0; Foo ( int a1 ) : Foo ( a1 , 0 ){ } private : int m1 ; int m2 ; }","title":"\u793a\u4f8b"},{"location":"C++/others/delegating_constructor/#_3","text":"class ErrorFoo { public : ErrorFoo ( int v1 , int v2 ){ m1 = v1 ; m2 = v2 ; } /*\u6b64\u5904\u5e76\u6ca1\u6709\u5c06ErrorFoo\u7684\u6784\u9020\u59d4\u6258\u7ed9ErrorFoo(int v1,int v2), \u53ea\u662f\u5728\u6784\u9020\u51fd\u6570\u5185\u90e8\u521b\u5efa\u4e86\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u6240\u4ee5\u8c03\u7528\u8be5\u6784\u9020\u51fd\u6570\uff0c \u4f1a\u5bfc\u81f4m1,m2\u5e76\u6ca1\u6709\u88ab\u6b63\u786e\u7684\u521d\u59cb\u5316*/ ErrorFoo ( int a1 ){ Foo ( a1 , 0 ); } private : int m1 ; int m2 ; }","title":"\u72af\u8fc7\u7684\u9519\u8bef"},{"location":"C++/others/singleTon_atomic_static_member/","text":"\u7b80\u4ecb \u672c\u6587\u4ecb\u7ecd \u5355\u4f8b\u6a21\u5f0f \u5b9e\u73b0\u7684\u53e6\u5916\u4e24\u79cd\u65b9\u6cd5: \u901a\u8fc7double check(\u501f\u52a9std::atomic)\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u91c7\u7528static member\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f double check\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u5728\u4f7f\u7528double check\u6765\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 std::atomic \u6765\u5b9e\u73b0\u5fc5\u8981\u7684\u540c\u6b65\u3002 class SingleTon { public : static SingleTon * getInstance ( void ) { if ( s_p . load () == nullptr ){ std :: lock_gurad < std :: mutex > lk ( s_mtx ); if ( s_p . load () == nullptr ){ auto p = new SingleTon (); s_p . store ( p ); } } return s_p . load (); } public : int getValue () { return m_int ; } private : static std :: mutex s_mtx ; static std :: atomic < SingleTon *> s_p ; SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; }; \u501f\u52a9static member\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u5728c++11\u4e2d\uff0cc++\u6807\u51c6\u5f00\u59cb\u652f\u6301\u591a\u7ebf\u7a0b\u6a21\u5f0f\uff0c\u51fd\u6570\u5185\u90e8\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u4e3a\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c \u8fd9\u4e5f\u5f88\u5927\u7684\u7b80\u5316\u4e86\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u73b0\u65b9\u59cb\u3002 class SingleTon { public : static SingleTon & getInstance ( void ) { static SingleTon s_singleTon (); //\u91c7\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf return s_singleTon ; } public : int getValue () { return m_int ; } private : SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; };","title":"singleTon atomic static member"},{"location":"C++/others/singleTon_atomic_static_member/#_1","text":"\u672c\u6587\u4ecb\u7ecd \u5355\u4f8b\u6a21\u5f0f \u5b9e\u73b0\u7684\u53e6\u5916\u4e24\u79cd\u65b9\u6cd5: \u901a\u8fc7double check(\u501f\u52a9std::atomic)\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u91c7\u7528static member\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f","title":"\u7b80\u4ecb"},{"location":"C++/others/singleTon_atomic_static_member/#double-check","text":"\u5728\u4f7f\u7528double check\u6765\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u7528 std::atomic \u6765\u5b9e\u73b0\u5fc5\u8981\u7684\u540c\u6b65\u3002 class SingleTon { public : static SingleTon * getInstance ( void ) { if ( s_p . load () == nullptr ){ std :: lock_gurad < std :: mutex > lk ( s_mtx ); if ( s_p . load () == nullptr ){ auto p = new SingleTon (); s_p . store ( p ); } } return s_p . load (); } public : int getValue () { return m_int ; } private : static std :: mutex s_mtx ; static std :: atomic < SingleTon *> s_p ; SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; };","title":"double check\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f"},{"location":"C++/others/singleTon_atomic_static_member/#static-member","text":"\u5728c++11\u4e2d\uff0cc++\u6807\u51c6\u5f00\u59cb\u652f\u6301\u591a\u7ebf\u7a0b\u6a21\u5f0f\uff0c\u51fd\u6570\u5185\u90e8\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u4e3a\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c \u8fd9\u4e5f\u5f88\u5927\u7684\u7b80\u5316\u4e86\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u73b0\u65b9\u59cb\u3002 class SingleTon { public : static SingleTon & getInstance ( void ) { static SingleTon s_singleTon (); //\u91c7\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf return s_singleTon ; } public : int getValue () { return m_int ; } private : SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; };","title":"\u501f\u52a9static member\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f"},{"location":"C++/others/singleTon_mutex_call_once/","text":"\u7b80\u4ecb \u5355\u4f8b\u6a21\u5f0f \u662f\u5f88\u5e38\u7528\u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u8981\u975e\u5e38\u6ce8\u610f\u7ebf\u7a0b\u5b89\u5168\uff0c \u6211\u4eec\u4f1a\u4ecb\u7ecd\u56db\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f: std::mutex\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f std::call_once\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u501f\u52a9static member\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u4f7f\u7528std::atomic\u6765\u5b9e\u73b0double check \u6a21\u5f0f \u672c\u6587\u4f1a\u4ecb\u7ecd\u524d\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u540e\u9762\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\u8bf7\u53c2\u8003 \u672c\u6587 . \u5b9e\u73b0\u65b9\u6cd5 \u501f\u52a9std::mutex class SingleTon { public : static SingleTon * getInstance ( void ) { std :: lock_guard < std :: mutex > lk ( s_mtx ); if ( s_p == nullptr ) { s_p = new SingleTon (); } return s_p ; } public : int getValue () { return m_int ; } private : static std :: mutex s_mtx ; static SingleTon * s_p ; SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; }; \u4e0a\u9762\u7684\u5b9e\u73b0\u4e2d\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u8c03\u7528 getInstance \u662f\u5b89\u5168\u7684\uff0c\u4f46\u5728\u6bcf\u6b21\u8c03\u7528\u8be5\u51fd\u6570\u7684\u65f6\u5019\uff0c\u90fd\u8981\u6c42\u83b7\u53d6 mutex , \u8fd9\u4f1a\u964d\u4f4e\u8be5\u51fd\u6570\u7684\u6027\u80fd\u3002 \u57fa\u4e8e\u4ee5\u4e0a\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728\u6765\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u770b\u4e00\u4e0b\u5176\u4e2d\u4f1a\u5b58\u5728\u4ec0\u4e48\u6837\u7684\u95ee\u9898\u3002 static SingleTon * getInstance ( void ) { if ( s_p == nullptr ){ std :: lock_guard < std :: mutex > lk ( s_mtx ); if ( s_p == nullptr ){ s_p = new SingleTon (); } } return s_p ; } \u5728\u89e3\u91ca\u4e0a\u9762\u7684\u4fee\u6539\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u8bb0\u4f4f\u4e24\u4e2a\u6982\u5ff5\uff0c\u7f16\u8bd1\u5668\u7684\u6307\u4ee4\u4f18\u5316\u4f1a\u5c06\u90e8\u5206\u6307\u4ee4\u6253\u4e71\uff0c\u5176\u6b21 \u662fCPU\u4e5f\u4f1a\u4e71\u5e8f\u6267\u884c\uff0c\u8fd9\u4f7f\u5f97\u5f88\u591a\u6307\u4ee4\u5e76\u4e0d\u50cf\u6211\u4eec\u60f3\u8c61\u4e2d\u7684\u987a\u5e8f\u90a3\u6837\u8fd0\u884c\u3002\u8fd9\u4f7f\u5f97\u4e0a\u9762\u7684\u4ee3\u7801 \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 . s_p = new SingleTon(); \u8fd9\u53e5\u4ee3\u7801\u5305\u62ec\u4e09\u4e2a\u90e8\u5206: 1 . \u7533\u8bf7\u5185\u5b58\u7a7a\u95f4 2 . \u8c03\u7528\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5185\u5b58\u7a7a\u95f4 3 . \u5c06\u5730\u5740\u6307\u9488\u8d4b\u503c\u7ed9 `s_p` \u5728\u5b9e\u9645\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u8bd1\u5668\u6216CPU\u4f1a\u6267\u884c\u67d0\u4e9b\u4f18\u5316\uff0c\u5f88\u6709\u53ef\u80fd\u4f7f\u5f97\u6307\u4ee4\u8fd0\u884c\u987a\u5e8f\u53d8\u6210 1,3,2 , \u5982\u679c\u5728\u6267\u884c\u5b8c 1,3 \u4e4b\u540e\uff0c\u7ebf\u7a0b\u88ab\u5207\u6362\uff0c\u8fd9\u65f6\u5019\u95ee\u9898\u51fa\u73b0\u4e86\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f88\u6709\u53ef\u80fd\u83b7\u5f97\u8be5\u6307\u9488\uff0c\u4f46\u8be5\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\u7a7a\u95f4\u5e76\u6ca1\u6709\u6765\u5f97\u53ca\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u501f\u52a9std::call_once\u4e0estd::once_flag \u5728c++\u4e2d\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61(fn)\u7ed9 std::call_once ,\u8be5\u51fd\u6570 \u53ef\u4ee5\u786e\u4fddfn\u53ea\u88ab\u8c03\u7528\u4e00\u6b21\u3002 class SingleTon { public : static SingleTon * getInstance ( void ) { std :: call_once ( s_flag , initSingleTon ); return s_p ; } public : int getValue () { return m_int ; } private : static SingleTon * s_p ; static std :: once_flag s_flag ; static void ininSingleTon () { s_p = new SingleTon (); } SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; };","title":"singleTon mutex call once"},{"location":"C++/others/singleTon_mutex_call_once/#_1","text":"\u5355\u4f8b\u6a21\u5f0f \u662f\u5f88\u5e38\u7528\u7684\u4e00\u79cd\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u8981\u975e\u5e38\u6ce8\u610f\u7ebf\u7a0b\u5b89\u5168\uff0c \u6211\u4eec\u4f1a\u4ecb\u7ecd\u56db\u79cd\u65b9\u5f0f\u6765\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f: std::mutex\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f std::call_once\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u501f\u52a9static member\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f \u4f7f\u7528std::atomic\u6765\u5b9e\u73b0double check \u6a21\u5f0f \u672c\u6587\u4f1a\u4ecb\u7ecd\u524d\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u540e\u9762\u4e24\u79cd\u5b9e\u73b0\u65b9\u6cd5\u8bf7\u53c2\u8003 \u672c\u6587 .","title":"\u7b80\u4ecb"},{"location":"C++/others/singleTon_mutex_call_once/#_2","text":"","title":"\u5b9e\u73b0\u65b9\u6cd5"},{"location":"C++/others/singleTon_mutex_call_once/#stdmutex","text":"class SingleTon { public : static SingleTon * getInstance ( void ) { std :: lock_guard < std :: mutex > lk ( s_mtx ); if ( s_p == nullptr ) { s_p = new SingleTon (); } return s_p ; } public : int getValue () { return m_int ; } private : static std :: mutex s_mtx ; static SingleTon * s_p ; SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; }; \u4e0a\u9762\u7684\u5b9e\u73b0\u4e2d\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u8c03\u7528 getInstance \u662f\u5b89\u5168\u7684\uff0c\u4f46\u5728\u6bcf\u6b21\u8c03\u7528\u8be5\u51fd\u6570\u7684\u65f6\u5019\uff0c\u90fd\u8981\u6c42\u83b7\u53d6 mutex , \u8fd9\u4f1a\u964d\u4f4e\u8be5\u51fd\u6570\u7684\u6027\u80fd\u3002 \u57fa\u4e8e\u4ee5\u4e0a\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u5728\u6765\u505a\u4e00\u4e9b\u4fee\u6539\uff0c\u770b\u4e00\u4e0b\u5176\u4e2d\u4f1a\u5b58\u5728\u4ec0\u4e48\u6837\u7684\u95ee\u9898\u3002 static SingleTon * getInstance ( void ) { if ( s_p == nullptr ){ std :: lock_guard < std :: mutex > lk ( s_mtx ); if ( s_p == nullptr ){ s_p = new SingleTon (); } } return s_p ; } \u5728\u89e3\u91ca\u4e0a\u9762\u7684\u4fee\u6539\u4e4b\u524d\uff0c\u6211\u4eec\u5148\u8bb0\u4f4f\u4e24\u4e2a\u6982\u5ff5\uff0c\u7f16\u8bd1\u5668\u7684\u6307\u4ee4\u4f18\u5316\u4f1a\u5c06\u90e8\u5206\u6307\u4ee4\u6253\u4e71\uff0c\u5176\u6b21 \u662fCPU\u4e5f\u4f1a\u4e71\u5e8f\u6267\u884c\uff0c\u8fd9\u4f7f\u5f97\u5f88\u591a\u6307\u4ee4\u5e76\u4e0d\u50cf\u6211\u4eec\u60f3\u8c61\u4e2d\u7684\u987a\u5e8f\u90a3\u6837\u8fd0\u884c\u3002\u8fd9\u4f7f\u5f97\u4e0a\u9762\u7684\u4ee3\u7801 \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 . s_p = new SingleTon(); \u8fd9\u53e5\u4ee3\u7801\u5305\u62ec\u4e09\u4e2a\u90e8\u5206: 1 . \u7533\u8bf7\u5185\u5b58\u7a7a\u95f4 2 . \u8c03\u7528\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5185\u5b58\u7a7a\u95f4 3 . \u5c06\u5730\u5740\u6307\u9488\u8d4b\u503c\u7ed9 `s_p` \u5728\u5b9e\u9645\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u7f16\u8bd1\u5668\u6216CPU\u4f1a\u6267\u884c\u67d0\u4e9b\u4f18\u5316\uff0c\u5f88\u6709\u53ef\u80fd\u4f7f\u5f97\u6307\u4ee4\u8fd0\u884c\u987a\u5e8f\u53d8\u6210 1,3,2 , \u5982\u679c\u5728\u6267\u884c\u5b8c 1,3 \u4e4b\u540e\uff0c\u7ebf\u7a0b\u88ab\u5207\u6362\uff0c\u8fd9\u65f6\u5019\u95ee\u9898\u51fa\u73b0\u4e86\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5f88\u6709\u53ef\u80fd\u83b7\u5f97\u8be5\u6307\u9488\uff0c\u4f46\u8be5\u6307\u9488\u6240\u6307\u5411\u7684\u5730\u5740\u7a7a\u95f4\u5e76\u6ca1\u6709\u6765\u5f97\u53ca\u8fdb\u884c\u521d\u59cb\u5316\u3002","title":"\u501f\u52a9std::mutex"},{"location":"C++/others/singleTon_mutex_call_once/#stdcall_oncestdonce_flag","text":"\u5728c++\u4e2d\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61(fn)\u7ed9 std::call_once ,\u8be5\u51fd\u6570 \u53ef\u4ee5\u786e\u4fddfn\u53ea\u88ab\u8c03\u7528\u4e00\u6b21\u3002 class SingleTon { public : static SingleTon * getInstance ( void ) { std :: call_once ( s_flag , initSingleTon ); return s_p ; } public : int getValue () { return m_int ; } private : static SingleTon * s_p ; static std :: once_flag s_flag ; static void ininSingleTon () { s_p = new SingleTon (); } SingleTon ( SingleTon & ) = delete ; SingleTon & operator = ( SingleTon & ) = delete ; SingleTon ( SingleTon && ) = delete ; SingleTon & operator = ( SingleTon && ) = delete ; SingleTon () { m_int = 0 ; } private : int m_int ; };","title":"\u501f\u52a9std::call_once\u4e0estd::once_flag"},{"location":"C++/standardLibrary/multiThread/mutex_shared_mutex/","text":"","title":"Mutex shared mutex"},{"location":"C++/standardLibrary/multiThread/thread/","text":"\u7b80\u4ecb \u53c2\u8003\u624b\u518c: std::thread \u5934\u6587\u4ef6 \"#include \\<thread>\" \u793a\u4f8b\u4ee3\u7801\u4e0b\u8f7d c++\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e24\u79cd\u65b9\u6cd5\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u5206\u522b\u4e3a std::async \u4e0e std::thread ,\u672c\u7ae0\u4e3b\u8981\u4ecb\u7ecd std::thread \u7684\u76f8\u5173\u7528\u6cd5\u3002 c++\u4e2d\u901a\u8fc7 std::thread \u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u4f20\u5165\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u5bf9\u8c61 \u6216\u51fd\u6570\uff0c\u540c\u65f6\u4f20\u5165\u51fd\u6570\u6240\u9700\u8981\u7684\u76f8\u5173\u53c2\u6570\u3002 \u793a\u4f8b \u521b\u5efa\u7ebf\u7a0b \u901a\u8fc7\u5b9e\u4f8b\u5316 std::thread \u5e76\u4f20\u5165\u76f8\u5173\u7684\u53ef\u8c03\u7528\u51fd\u6570\u53ca\u6240\u9700\u7684\u53c2\u6570\u6765\u521b\u5efa\u4e00 \u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u5f53\u7ebf\u7a0b\u521b\u5efa\u5b8c\u6210\u4e4b\u540e\u5c31 \u8fdb\u5165\u7ebf\u7a0b\u5c31\u7eea\u961f\u5217\u7b49\u5f85\u8fd0\u884c \u3002 void printValue ( int j ){ std :: cout << j << std :: endl ; } //\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b t,\u8fd0\u884c printValue,\u5e76\u4f20\u5165'3'\u4f5c\u4e3a\u53c2\u6570 std :: thread t ( printValue , 3 ); \u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210 \u5728\u7ebf\u7a0b t1 \u521b\u5efa\u5b8c\u6210\u540e\uff0c t1 \u5b9e\u4f8b\u4fbf\u548c\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5fc5\u987b\u5728\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 std::thread::join() \u6765\u7b49\u5f85\u7ebf\u7a0b\u7684\u5b8c\u6210\u6216\u8005\u8c03\u7528 std::thread::detach() \u6765\u5206\u79bb\u7ebf\u7a0b\u3002 \u5f53\u51fd\u6570 fun1 \u8c03\u7528 std::thread::join() \u540e\uff0c\u4f1a\u5bfc\u81f4 fun1 \u963b\u585e\uff0c\u76f4\u5230 \u7ebf\u7a0b\u5b8c\u6210\u5e76\u9000\u51fa\u3002 //\u7b49\u5f85\u7ebf\u7a0b t \u5b8c\u6210\u5e76\u9000\u51fa t . join (); //\u6216\u8005\u5206\u79bb\u7ebf\u7a0b //t.detach(); \u7ebf\u7a0b\u662f\u5426\u53ef\u4ee5join \u901a\u8fc7\u8c03\u7528 std:thread::joinable() \u6765\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u53ef\u4ee5 join \u6216 detach . if ( t . joinable ()){ t . join (); //t.detach(); } thread\u4e2d\u7684\u5f02\u5e38 thread\u5bf9\u8c61\u9000\u51fa\u4f5c\u7528\u57df\u65f6\uff0c\u8981\u68c0\u6d4b joinable \u7684\u72b6\u6001\uff0c\u5728\u72b6\u6001\u4e3a true \u7684\u65f6\u5019\u9000\u51fa\u4f5c\u7528\u57df\u4f1a\u629b\u51fa\u5f02\u5e38 \u5f53\u5411 joinable \u4e3a true \u7684 thread \u5bf9\u8c61\u8d4b\u503c\u65b0\u7684\u5bf9\u8c61\u65f6\uff0c\u4f1a\u5bfc\u81f4 \u629b\u51fa\u5f02\u5e38","title":"Thread"},{"location":"C++/standardLibrary/multiThread/thread/#_1","text":"\u53c2\u8003\u624b\u518c: std::thread \u5934\u6587\u4ef6 \"#include \\<thread>\" \u793a\u4f8b\u4ee3\u7801\u4e0b\u8f7d c++\u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b\u4e24\u79cd\u65b9\u6cd5\u6765\u521b\u5efa\u7ebf\u7a0b\uff0c\u5206\u522b\u4e3a std::async \u4e0e std::thread ,\u672c\u7ae0\u4e3b\u8981\u4ecb\u7ecd std::thread \u7684\u76f8\u5173\u7528\u6cd5\u3002 c++\u4e2d\u901a\u8fc7 std::thread \u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u4f20\u5165\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u5bf9\u8c61 \u6216\u51fd\u6570\uff0c\u540c\u65f6\u4f20\u5165\u51fd\u6570\u6240\u9700\u8981\u7684\u76f8\u5173\u53c2\u6570\u3002","title":"\u7b80\u4ecb"},{"location":"C++/standardLibrary/multiThread/thread/#_2","text":"","title":"\u793a\u4f8b"},{"location":"C++/standardLibrary/multiThread/thread/#_3","text":"\u901a\u8fc7\u5b9e\u4f8b\u5316 std::thread \u5e76\u4f20\u5165\u76f8\u5173\u7684\u53ef\u8c03\u7528\u51fd\u6570\u53ca\u6240\u9700\u7684\u53c2\u6570\u6765\u521b\u5efa\u4e00 \u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u5f53\u7ebf\u7a0b\u521b\u5efa\u5b8c\u6210\u4e4b\u540e\u5c31 \u8fdb\u5165\u7ebf\u7a0b\u5c31\u7eea\u961f\u5217\u7b49\u5f85\u8fd0\u884c \u3002 void printValue ( int j ){ std :: cout << j << std :: endl ; } //\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b t,\u8fd0\u884c printValue,\u5e76\u4f20\u5165'3'\u4f5c\u4e3a\u53c2\u6570 std :: thread t ( printValue , 3 );","title":"\u521b\u5efa\u7ebf\u7a0b"},{"location":"C++/standardLibrary/multiThread/thread/#_4","text":"\u5728\u7ebf\u7a0b t1 \u521b\u5efa\u5b8c\u6210\u540e\uff0c t1 \u5b9e\u4f8b\u4fbf\u548c\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u5fc5\u987b\u5728\u5408\u9002\u7684\u5730\u65b9\u8c03\u7528 std::thread::join() \u6765\u7b49\u5f85\u7ebf\u7a0b\u7684\u5b8c\u6210\u6216\u8005\u8c03\u7528 std::thread::detach() \u6765\u5206\u79bb\u7ebf\u7a0b\u3002 \u5f53\u51fd\u6570 fun1 \u8c03\u7528 std::thread::join() \u540e\uff0c\u4f1a\u5bfc\u81f4 fun1 \u963b\u585e\uff0c\u76f4\u5230 \u7ebf\u7a0b\u5b8c\u6210\u5e76\u9000\u51fa\u3002 //\u7b49\u5f85\u7ebf\u7a0b t \u5b8c\u6210\u5e76\u9000\u51fa t . join (); //\u6216\u8005\u5206\u79bb\u7ebf\u7a0b //t.detach();","title":"\u7b49\u5f85\u7ebf\u7a0b\u5b8c\u6210"},{"location":"C++/standardLibrary/multiThread/thread/#join","text":"\u901a\u8fc7\u8c03\u7528 std:thread::joinable() \u6765\u5224\u65ad\u7ebf\u7a0b\u662f\u5426\u53ef\u4ee5 join \u6216 detach . if ( t . joinable ()){ t . join (); //t.detach(); }","title":"\u7ebf\u7a0b\u662f\u5426\u53ef\u4ee5join"},{"location":"C++/standardLibrary/multiThread/thread/#thread","text":"thread\u5bf9\u8c61\u9000\u51fa\u4f5c\u7528\u57df\u65f6\uff0c\u8981\u68c0\u6d4b joinable \u7684\u72b6\u6001\uff0c\u5728\u72b6\u6001\u4e3a true \u7684\u65f6\u5019\u9000\u51fa\u4f5c\u7528\u57df\u4f1a\u629b\u51fa\u5f02\u5e38 \u5f53\u5411 joinable \u4e3a true \u7684 thread \u5bf9\u8c61\u8d4b\u503c\u65b0\u7684\u5bf9\u8c61\u65f6\uff0c\u4f1a\u5bfc\u81f4 \u629b\u51fa\u5f02\u5e38","title":"thread\u4e2d\u7684\u5f02\u5e38"},{"location":"C++/standardLibrary/multiThread/thread_nativeHandle/","text":"\u7b80\u4ecb \u53c2\u8003: std::thread::native_handle() c++\u4e2d\u7684\u7ebf\u7a0b\u5e93 std::thread \u6240\u63d0\u4f9b\u7684\u7ebf\u7a0b\u63a7\u5236\u80fd\u529b\u975e\u5e38\u6709\u9650\uff0c \u7ebf\u7a0b\u521b\u5efa\u5b8c\u6210\u540e\u5373\u5f00\u59cb\u8fd0\u884c\uff0c\u53ea\u63d0\u4f9b\u4e86 joinable , join , detach \uff0c \u4e3a\u4e86\u5f25\u8865\u8fd9\u4e2a\u4e0d\u8db3\uff0cc++\u63d0\u4f9b\u4e86\u4e00\u4e2a std::thread::native_handle() \u51fd\u6570\u6765 \u83b7\u53d6\u4e0e\u7279\u6027\u7ebf\u7a0b\u5e93\u5b9e\u73b0\u76f8\u5173\u7684 handle ,\u4ee5\u6b64\u6765\u63d0\u4f9b\u66f4\u591a\u7ebf\u7a0b\u63a7\u5236\u80fd\u529b\u3002 \u63a5\u53e3 native_handle_type native_handle ();","title":"thread nativeHandle"},{"location":"C++/standardLibrary/multiThread/thread_nativeHandle/#_1","text":"\u53c2\u8003: std::thread::native_handle() c++\u4e2d\u7684\u7ebf\u7a0b\u5e93 std::thread \u6240\u63d0\u4f9b\u7684\u7ebf\u7a0b\u63a7\u5236\u80fd\u529b\u975e\u5e38\u6709\u9650\uff0c \u7ebf\u7a0b\u521b\u5efa\u5b8c\u6210\u540e\u5373\u5f00\u59cb\u8fd0\u884c\uff0c\u53ea\u63d0\u4f9b\u4e86 joinable , join , detach \uff0c \u4e3a\u4e86\u5f25\u8865\u8fd9\u4e2a\u4e0d\u8db3\uff0cc++\u63d0\u4f9b\u4e86\u4e00\u4e2a std::thread::native_handle() \u51fd\u6570\u6765 \u83b7\u53d6\u4e0e\u7279\u6027\u7ebf\u7a0b\u5e93\u5b9e\u73b0\u76f8\u5173\u7684 handle ,\u4ee5\u6b64\u6765\u63d0\u4f9b\u66f4\u591a\u7ebf\u7a0b\u63a7\u5236\u80fd\u529b\u3002","title":"\u7b80\u4ecb"},{"location":"C++/standardLibrary/multiThread/thread_nativeHandle/#_2","text":"native_handle_type native_handle ();","title":"\u63a5\u53e3"},{"location":"JS/","text":"JS\u8bbe\u8ba1\u6a21\u5f0f js\u4e2d\u7c7b\u7684\u5b9e\u73b0","title":"Home"},{"location":"JS/#js","text":"js\u4e2d\u7c7b\u7684\u5b9e\u73b0","title":"JS\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"JS/ObjectOriented/","text":"\u7b80\u4ecb \u5728\u5f00\u59cb\u5b66\u4e60JS\u7684\u65f6\u5019\uff0c\u4f1a\u770b\u5230\u5f88\u591a\u8d44\u6599\u4e0a\u5199\u5230JS\u662f\u4e00\u95e8\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u5bf9\u4e8e \u719f\u6089C++/JAVA\u7b49\u8bed\u8a00\u7684\u4eba\u800c\u8a00\uff0c\u9762\u5411\u5bf9\u8c61\u770b\u8d77\u6765\u662f\u975e\u5e38\u81ea\u7136\u7684\u5b58\u5728\uff0c\u4f46\u662f\u5728JS \u4e2d\uff0c\u4e3a\u4e86\u5b9e\u73b0\u6240\u8ffd\u6c42\u7684\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\u7684\u6548\u679c\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u7406\u89e3\u8d39\u4e9b\u529f\u592b\u7684\u3002 \u8c08\u5230\u9762\u5411\u5bf9\u8c61\uff0c\u4f1a\u8bf4\u5230\u56db\u5927\u7279\u5f81: * \u5c01\u88c5 * \u7ee7\u627f * \u591a\u6001 * \u91cd\u8f7d \u90a3\u4e48\u5728JS\u4e2d\uff0c\u54ea\u4e9b\u662f \u53ef\u4ee5\u88ab\u652f\u6301 \uff0c \u5982\u4f55\u88ab\u652f\u6301 \u5462\u3002 \u5728\u901a\u8fc7js\u6a21\u62df\u7c7b\u7684\u8fc7\u7a0b\u4e2d\u6709\u51e0\u4e2a\u6982\u5ff5\u9700\u8981\u7406\u89e3: * new\u64cd\u4f5c\u7b26 * \u539f\u578b\u7ee7\u627f(prototype) \u601d\u8003\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1 \u5c01\u88c5 \u5c01\u88c5\u5c06\u6570\u636e\u53ca\u9488\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u7ec4\u5408\u5728\u4e00\u6837\uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u4e0d\u6539\u53d8\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\uff0c \u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u6539\u53d8\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\u3002\u9488\u5bf9C++\u800c\u8a00\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u4f7f\u7528 private \u4fee\u9970\u7b26\u6765\u7ec4\u7ec7\u5916\u90e8\u5bf9\u8be5\u6210\u5458\u53d8\u91cf\u7684\u8bbf\u95ee\uff0c\u5f88\u9057\u61be\uff0c\u76ee\u524djs\u4e2d\u5e76\u4e0d\u652f\u6301\u6982\u5ff5\u4e0a\u7684 \u79c1\u6709\u6210\u5458\u53d8\u91cf\u3002 \u4e0b\u9762\u6765\u5b9e\u73b0\u4e00\u4e2a person \u7c7b\uff0c\u53ef\u4ee5\u4e3a\u8be5\u5b9e\u4f8b\u8bbe\u7f6e\u540d\u79f0\u53ca\u5e74\u7eaa\u3002 function Person ( age , name ) { this . _age = age ; this . _name = name ; } Person . prototype . setAge = function ( age ) { this . _age = age ; } Person . prototype . getAge = function () { return this . _age ; } Person . prototype . setName = function ( name ) { this . _name = name ; } Person . prototype . getName = function (){ return this . _name ; } var p1 = new Person ( 18 , 'jack' ); console . log ( \"Before change age:\" , p1 . getAge ()); console . log ( \"Before change name:\" , p1 . getName ()); p1 . setAge ( 20 ); p1 . setName ( 'tom' ); console . log ( \"End change age:\" , p1 . getAge ()); console . log ( \"End change name:\" , p1 . getName ()); js\u4e0d\u652f\u6301\u79c1\u6709\u6210\u5458\u53d8\u91cf\uff0c\u4e2a\u4eba\u559c\u6b22\u4f7f\u7528 _xxx \u683c\u5f0f\u4ee3\u8868\u79c1\u6709\u53d8\u91cf \u91cd\u8f7d \u5728c++\u4e2d\u91cd\u8f7d\u662f\u6307\u591a\u4e2a\u51fd\u6570\u53ef\u4ee5\u62e5\u6709\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u4f46\u662f\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u6216\u4e2a\u6570\u3002 \u5728\u5b9e\u9645\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u540c\u6765\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u4f46js\u662f\u4e00\u95e8\u52a8\u6001\u8bed\u8a00\uff0c\u4e14\u5e76\u4e0d\u9650\u5236\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u53ca\u7c7b\u578b\uff0c\u6240\u4ee5 js\u662f\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u7684\u3002 arguments object \u7ee7\u627f js\u901a\u8fc7 \u539f\u578b\u94fe \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u7c7b\u4e2d\u7684\u7ee7\u627f,\u5173\u4e8e\u539f\u578b\u94fe\u4f1a\u4e13\u95e8 \u5199\u6587\u7ae0\u6765\u4ecb\u7ecd\uff0c\u672c\u7ae0\u8282\u53ea\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u4f1a\u5b9a\u4e49\u4e00\u4e2a Person \u7c7b\uff0c\u5176\u4e2d\u5305\u542b \u59d3\u540d \u53ca \u5e74\u9f84 \u53d8\u91cf\uff0c \u7136\u540e Student \u7c7b\u4f1a\u7ee7\u627f Person \u7c7b\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u6dfb\u52a0 \u5b66\u53f7 \u53d8\u91cf\u3002 \u6240\u4ee5\u8fd9\u91cc Person \u7c7b\u4e3a\u7236\u7c7b, Student \u7c7b\u4e3a\u5b50\u7c7b\u3002 function Person ( name , age ) { this . _name = name ; this . _age = age ; } Person . prototype = { setName : function ( name ) { this . _name = name ; }, getName : function () { return this . _name ; }, setAge : function ( age ) { this . _age = age ; }, getAge : function (){ return this . _age ; } } function Student ( name , age , studentID ) { Person . call ( this , name , age ); this . _studentID = studentID ; } //Student\u7684\u539f\u578b\u4e0ePerson\u7684\u539f\u578b\u7ec4\u6210\u539f\u578b\u94fe Student . prototype = Object . create ( Person . prototype ); //\u5b9a\u4e49\u9488\u5bf9Student\u7684\u51fd\u6570 Student . prototype . setID = function ( id ) { this . _studentID = id ; } Student . prototype . getID = function () { return this . _studentID ; } var stu = new Student ( \"Tom\" , 20 , \"2012\" ); console . log ( stu . getName ()); console . log ( stu . getAge ()); console . log ( stu . getID ()); js\u4e2d\u65e0\u6cd5\u6a21\u62df\u51fa\u591a\u91cd\u7ee7\u627f\uff0c\u865a\u62df\u7ee7\u627f\u7b49\u6982\u5ff5 \u6709\u4e9b\u4ee3\u7801\u5728\u5b9e\u73b0\u539f\u578b\u94fe\u7684\u65f6\u5019\u4f1a\u91c7\u7528 Student.prototype = new Person(xxx,xxx) \u7684\u5199\u6cd5\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff0c\u5c3d\u91cf\u4e0d\u8981\u91c7\u7528 \u591a\u6001 \u5728\u8fd9\u91cc\u79f0\u547c\u591a\u6001\u611f\u89c9\u5e76\u4e0d\u662f\u592a\u5408\u9002\uff0c\u4e8b\u5b9e\u4e0a \u591a\u6001 \u7528\u5728C++\u4e2d\u4e3b\u8981 \u7528\u4e8e\u63cf\u8ff0\u52a8\u6001\u7ed1\u5b9a\u7684\u6982\u5ff5\uff0c\u5176\u4e2d\u4f1a\u6d89\u53ca\u5230\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff0c\u9488\u5bf9JS\u800c\u8a00\uff0c \u53ef\u80fd\u79f0\u547c \u91cd\u5199 \u66f4\u52a0\u5408\u9002\u5427\u3002 function Person ( name , age ) { this . _name = name ; this . _age = age ; } Person . prototype . introduce = function (){ console . log ( \"I am %s, i am %d years old\" , this . _name , this . _age ); } function Student ( name , age , id ){ Person . call ( this , name , age ); this . _studentID = id ; } Student . prototype = Object . create ( Person . prototype ); Student . prototype . introduce = function (){ console . log ( \"I am %s, I am a student\" , this . _name ); } var person = new Person ( \"Tom\" , 18 ); person . introduce (); var student = new Student ( \"Jack\" , 20 , \"2012\" ); student . introduce ();","title":"\u5bf9\u8c61\u8bbe\u8ba1"},{"location":"JS/ObjectOriented/#_1","text":"\u5728\u5f00\u59cb\u5b66\u4e60JS\u7684\u65f6\u5019\uff0c\u4f1a\u770b\u5230\u5f88\u591a\u8d44\u6599\u4e0a\u5199\u5230JS\u662f\u4e00\u95e8\u9762\u5411\u5bf9\u8c61\u7684\u8bed\u8a00\uff0c\u5bf9\u4e8e \u719f\u6089C++/JAVA\u7b49\u8bed\u8a00\u7684\u4eba\u800c\u8a00\uff0c\u9762\u5411\u5bf9\u8c61\u770b\u8d77\u6765\u662f\u975e\u5e38\u81ea\u7136\u7684\u5b58\u5728\uff0c\u4f46\u662f\u5728JS \u4e2d\uff0c\u4e3a\u4e86\u5b9e\u73b0\u6240\u8ffd\u6c42\u7684\u9762\u5411\u5bf9\u8c61\u5f00\u53d1\u7684\u6548\u679c\uff0c\u6211\u4eec\u8fd8\u662f\u9700\u8981\u7406\u89e3\u8d39\u4e9b\u529f\u592b\u7684\u3002 \u8c08\u5230\u9762\u5411\u5bf9\u8c61\uff0c\u4f1a\u8bf4\u5230\u56db\u5927\u7279\u5f81: * \u5c01\u88c5 * \u7ee7\u627f * \u591a\u6001 * \u91cd\u8f7d \u90a3\u4e48\u5728JS\u4e2d\uff0c\u54ea\u4e9b\u662f \u53ef\u4ee5\u88ab\u652f\u6301 \uff0c \u5982\u4f55\u88ab\u652f\u6301 \u5462\u3002 \u5728\u901a\u8fc7js\u6a21\u62df\u7c7b\u7684\u8fc7\u7a0b\u4e2d\u6709\u51e0\u4e2a\u6982\u5ff5\u9700\u8981\u7406\u89e3: * new\u64cd\u4f5c\u7b26 * \u539f\u578b\u7ee7\u627f(prototype)","title":"\u7b80\u4ecb"},{"location":"JS/ObjectOriented/#_2","text":"","title":"\u601d\u8003\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1"},{"location":"JS/ObjectOriented/#_3","text":"\u5c01\u88c5\u5c06\u6570\u636e\u53ca\u9488\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u7ec4\u5408\u5728\u4e00\u6837\uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u4e0d\u6539\u53d8\u63a5\u53e3\u7684\u60c5\u51b5\u4e0b\uff0c \u53ef\u4ee5\u6839\u636e\u60c5\u51b5\u6539\u53d8\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\u3002\u9488\u5bf9C++\u800c\u8a00\uff0c\u6211\u4eec\u4e00\u822c\u4f1a\u4f7f\u7528 private \u4fee\u9970\u7b26\u6765\u7ec4\u7ec7\u5916\u90e8\u5bf9\u8be5\u6210\u5458\u53d8\u91cf\u7684\u8bbf\u95ee\uff0c\u5f88\u9057\u61be\uff0c\u76ee\u524djs\u4e2d\u5e76\u4e0d\u652f\u6301\u6982\u5ff5\u4e0a\u7684 \u79c1\u6709\u6210\u5458\u53d8\u91cf\u3002 \u4e0b\u9762\u6765\u5b9e\u73b0\u4e00\u4e2a person \u7c7b\uff0c\u53ef\u4ee5\u4e3a\u8be5\u5b9e\u4f8b\u8bbe\u7f6e\u540d\u79f0\u53ca\u5e74\u7eaa\u3002 function Person ( age , name ) { this . _age = age ; this . _name = name ; } Person . prototype . setAge = function ( age ) { this . _age = age ; } Person . prototype . getAge = function () { return this . _age ; } Person . prototype . setName = function ( name ) { this . _name = name ; } Person . prototype . getName = function (){ return this . _name ; } var p1 = new Person ( 18 , 'jack' ); console . log ( \"Before change age:\" , p1 . getAge ()); console . log ( \"Before change name:\" , p1 . getName ()); p1 . setAge ( 20 ); p1 . setName ( 'tom' ); console . log ( \"End change age:\" , p1 . getAge ()); console . log ( \"End change name:\" , p1 . getName ()); js\u4e0d\u652f\u6301\u79c1\u6709\u6210\u5458\u53d8\u91cf\uff0c\u4e2a\u4eba\u559c\u6b22\u4f7f\u7528 _xxx \u683c\u5f0f\u4ee3\u8868\u79c1\u6709\u53d8\u91cf","title":"\u5c01\u88c5"},{"location":"JS/ObjectOriented/#_4","text":"\u5728c++\u4e2d\u91cd\u8f7d\u662f\u6307\u591a\u4e2a\u51fd\u6570\u53ef\u4ee5\u62e5\u6709\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u4f46\u662f\u4e0d\u540c\u7684\u53c2\u6570\u7c7b\u578b\u6216\u4e2a\u6570\u3002 \u5728\u5b9e\u9645\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570\u4e0d\u540c\u6765\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002 \u4f46js\u662f\u4e00\u95e8\u52a8\u6001\u8bed\u8a00\uff0c\u4e14\u5e76\u4e0d\u9650\u5236\u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u53ca\u7c7b\u578b\uff0c\u6240\u4ee5 js\u662f\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\u7684\u3002 arguments object","title":"\u91cd\u8f7d"},{"location":"JS/ObjectOriented/#_5","text":"js\u901a\u8fc7 \u539f\u578b\u94fe \u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u7c7b\u4e2d\u7684\u7ee7\u627f,\u5173\u4e8e\u539f\u578b\u94fe\u4f1a\u4e13\u95e8 \u5199\u6587\u7ae0\u6765\u4ecb\u7ecd\uff0c\u672c\u7ae0\u8282\u53ea\u63cf\u8ff0\u5982\u4f55\u4f7f\u7528\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u4f1a\u5b9a\u4e49\u4e00\u4e2a Person \u7c7b\uff0c\u5176\u4e2d\u5305\u542b \u59d3\u540d \u53ca \u5e74\u9f84 \u53d8\u91cf\uff0c \u7136\u540e Student \u7c7b\u4f1a\u7ee7\u627f Person \u7c7b\uff0c\u5e76\u5728\u6b64\u57fa\u7840\u4e0a\u6dfb\u52a0 \u5b66\u53f7 \u53d8\u91cf\u3002 \u6240\u4ee5\u8fd9\u91cc Person \u7c7b\u4e3a\u7236\u7c7b, Student \u7c7b\u4e3a\u5b50\u7c7b\u3002 function Person ( name , age ) { this . _name = name ; this . _age = age ; } Person . prototype = { setName : function ( name ) { this . _name = name ; }, getName : function () { return this . _name ; }, setAge : function ( age ) { this . _age = age ; }, getAge : function (){ return this . _age ; } } function Student ( name , age , studentID ) { Person . call ( this , name , age ); this . _studentID = studentID ; } //Student\u7684\u539f\u578b\u4e0ePerson\u7684\u539f\u578b\u7ec4\u6210\u539f\u578b\u94fe Student . prototype = Object . create ( Person . prototype ); //\u5b9a\u4e49\u9488\u5bf9Student\u7684\u51fd\u6570 Student . prototype . setID = function ( id ) { this . _studentID = id ; } Student . prototype . getID = function () { return this . _studentID ; } var stu = new Student ( \"Tom\" , 20 , \"2012\" ); console . log ( stu . getName ()); console . log ( stu . getAge ()); console . log ( stu . getID ()); js\u4e2d\u65e0\u6cd5\u6a21\u62df\u51fa\u591a\u91cd\u7ee7\u627f\uff0c\u865a\u62df\u7ee7\u627f\u7b49\u6982\u5ff5 \u6709\u4e9b\u4ee3\u7801\u5728\u5b9e\u73b0\u539f\u578b\u94fe\u7684\u65f6\u5019\u4f1a\u91c7\u7528 Student.prototype = new Person(xxx,xxx) \u7684\u5199\u6cd5\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff0c\u5c3d\u91cf\u4e0d\u8981\u91c7\u7528","title":"\u7ee7\u627f"},{"location":"JS/ObjectOriented/#_6","text":"\u5728\u8fd9\u91cc\u79f0\u547c\u591a\u6001\u611f\u89c9\u5e76\u4e0d\u662f\u592a\u5408\u9002\uff0c\u4e8b\u5b9e\u4e0a \u591a\u6001 \u7528\u5728C++\u4e2d\u4e3b\u8981 \u7528\u4e8e\u63cf\u8ff0\u52a8\u6001\u7ed1\u5b9a\u7684\u6982\u5ff5\uff0c\u5176\u4e2d\u4f1a\u6d89\u53ca\u5230\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff0c\u9488\u5bf9JS\u800c\u8a00\uff0c \u53ef\u80fd\u79f0\u547c \u91cd\u5199 \u66f4\u52a0\u5408\u9002\u5427\u3002 function Person ( name , age ) { this . _name = name ; this . _age = age ; } Person . prototype . introduce = function (){ console . log ( \"I am %s, i am %d years old\" , this . _name , this . _age ); } function Student ( name , age , id ){ Person . call ( this , name , age ); this . _studentID = id ; } Student . prototype = Object . create ( Person . prototype ); Student . prototype . introduce = function (){ console . log ( \"I am %s, I am a student\" , this . _name ); } var person = new Person ( \"Tom\" , 18 ); person . introduce (); var student = new Student ( \"Jack\" , 20 , \"2012\" ); student . introduce ();","title":"\u591a\u6001"},{"location":"shell/CI/deployGithubIO/","text":"","title":"deployGithubIO"}]}